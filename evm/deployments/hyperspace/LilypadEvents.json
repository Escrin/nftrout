{
  "address": "0x378f0D792f7959F667AC15AdBcf26ccA2A52b112",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requestor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            },
            {
              "internalType": "enum LilypadResultType",
              "name": "resultType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct LilypadEvents.BacalhauJobResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "BacalhauJobResultsReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requestor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "spec",
              "type": "string"
            },
            {
              "internalType": "enum LilypadResultType",
              "name": "resultType",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct LilypadEvents.BacalhauJob",
          "name": "job",
          "type": "tuple"
        }
      ],
      "name": "NewBacalhauJobSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authorizedContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bacalhauJobHistory",
      "outputs": [
        {
          "internalType": "address",
          "name": "requestor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "spec",
          "type": "string"
        },
        {
          "internalType": "enum LilypadResultType",
          "name": "resultType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bacalhauJobResultByAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "requestor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        },
        {
          "internalType": "enum LilypadResultType",
          "name": "resultType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bacalhauJobResultHistory",
      "outputs": [
        {
          "internalType": "address",
          "name": "requestor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        },
        {
          "internalType": "enum LilypadResultType",
          "name": "resultType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentJobID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchAllJobs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requestor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "spec",
              "type": "string"
            },
            {
              "internalType": "enum LilypadResultType",
              "name": "resultType",
              "type": "uint8"
            }
          ],
          "internalType": "struct LilypadEvents.BacalhauJob[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchAllResults",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requestor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            },
            {
              "internalType": "enum LilypadResultType",
              "name": "resultType",
              "type": "uint8"
            }
          ],
          "internalType": "struct LilypadEvents.BacalhauJobResult[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_requestor",
          "type": "address"
        }
      ],
      "name": "fetchJobsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requestor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "result",
              "type": "string"
            },
            {
              "internalType": "enum LilypadResultType",
              "name": "resultType",
              "type": "uint8"
            }
          ],
          "internalType": "struct LilypadEvents.BacalhauJobResult[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_jobId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_errorMsg",
          "type": "string"
        }
      ],
      "name": "returnBacalhauError",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_jobId",
          "type": "uint256"
        },
        {
          "internalType": "enum LilypadResultType",
          "name": "_resultType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "returnBacalhauResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_spec",
          "type": "string"
        },
        {
          "internalType": "enum LilypadResultType",
          "name": "_resultType",
          "type": "uint8"
        }
      ],
      "name": "runBacalhauJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorizedContract",
          "type": "address"
        }
      ],
      "name": "setAuthorizedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb99a4ff749a2fb920d94f6cdbcb5129a2a7f697c7f0fa81f3db9a00efcc355c4",
  "receipt": {
    "to": null,
    "from": "0x013e84e68AF747DE29F224747011a9c7f8828f08",
    "contractAddress": "0x378f0D792f7959F667AC15AdBcf26ccA2A52b112",
    "transactionIndex": 0,
    "gasUsed": "65743354",
    "logsBloom": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
    "blockHash": "0xec1a6bf32c5bac17d2d2245826fd3ada630a454c8936afb117db94e34ebf406c",
    "transactionHash": "0xb99a4ff749a2fb920d94f6cdbcb5129a2a7f697c7f0fa81f3db9a00efcc355c4",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 192625,
        "transactionHash": "0xb99a4ff749a2fb920d94f6cdbcb5129a2a7f697c7f0fa81f3db9a00efcc355c4",
        "address": "0x378f0D792f7959F667AC15AdBcf26ccA2A52b112",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000013e84e68af747de29f224747011a9c7f8828f08"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xec1a6bf32c5bac17d2d2245826fd3ada630a454c8936afb117db94e34ebf406c"
      }
    ],
    "blockNumber": 192625,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "e26ff854613bdd43492d3f8655aecd5d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct LilypadEvents.BacalhauJobResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"BacalhauJobResultsReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"spec\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct LilypadEvents.BacalhauJob\",\"name\":\"job\",\"type\":\"tuple\"}],\"name\":\"NewBacalhauJobSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authorizedContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bacalhauJobHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"spec\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bacalhauJobResultByAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bacalhauJobResultHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentJobID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchAllJobs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"spec\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"internalType\":\"struct LilypadEvents.BacalhauJob[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchAllResults\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"internalType\":\"struct LilypadEvents.BacalhauJobResult[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requestor\",\"type\":\"address\"}],\"name\":\"fetchJobsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"resultType\",\"type\":\"uint8\"}],\"internalType\":\"struct LilypadEvents.BacalhauJobResult[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_jobId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_errorMsg\",\"type\":\"string\"}],\"name\":\"returnBacalhauError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_jobId\",\"type\":\"uint256\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"_resultType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"returnBacalhauResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_spec\",\"type\":\"string\"},{\"internalType\":\"enum LilypadResultType\",\"name\":\"_resultType\",\"type\":\"uint8\"}],\"name\":\"runBacalhauJob\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorizedContract\",\"type\":\"address\"}],\"name\":\"setAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An experimental contract for POC work to call Bacalhau jobs from FVM smart contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lilypad/LilypadEvents.sol\":\"LilypadEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/lilypad/LilypadCallerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\nenum LilypadResultType {\\n    CID,\\n    StdOut,\\n    StdErr,\\n    ExitCode\\n}\\n\\ninterface LilypadCallerInterface {\\n    function lilypadFulfilled(\\n        address _from,\\n        uint _jobId,\\n        LilypadResultType _resultType,\\n        string calldata _result\\n    ) external;\\n\\n    function lilypadCancelled(\\n        address _from,\\n        uint _jobId,\\n        string calldata _errorMsg\\n    ) external;\\n}\\n\",\"keccak256\":\"0xb26a74a78a66fdb76ee9ad2540ffc31973209b0bd930118da910fa932aba6490\",\"license\":\"MIT\"},\"contracts/lilypad/LilypadEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\nimport {Counters} from \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport {LilypadCallerInterface, LilypadResultType} from \\\"./LilypadCallerInterface.sol\\\";\\n\\nerror LilypadEventsError();\\n\\n/**\\n    @notice An experimental contract for POC work to call Bacalhau jobs from FVM smart contracts\\n*/\\ncontract LilypadEvents is Ownable {\\n    using Counters for Counters.Counter; // create job id's?\\n    Counters.Counter private _jobIds;\\n\\n    // only this contract is allowed to call this bridge\\n    address public authorizedContract;\\n\\n    struct BacalhauJob {\\n        address requestor;\\n        // unique id - though uint only goes up to 2^265 -1 so probably want to handle\\n        // this better in future maybe a hash\\n        uint id;\\n        // stingified params? Seems rife for errors - we may need to consider a\\n        // Base contract and several others that verify details before calling\\n        // bacalhau. Or multiple functions in here to call specific things +\\n        // generic job\\n        string spec;\\n        // what type of result the job wants to receive\\n        LilypadResultType resultType;\\n    }\\n\\n    //testing\\n    struct BacalhauJobResult {\\n        address requestor;\\n        uint id;\\n        bool success;\\n        string result;\\n        LilypadResultType resultType;\\n    }\\n\\n    BacalhauJob[] public bacalhauJobHistory; //complete history of all jobs\\n    BacalhauJobResult[] public bacalhauJobResultHistory;\\n    mapping(address => BacalhauJobResult[]) public bacalhauJobResultByAddress; // jobs by requestor\\n\\n    event NewBacalhauJobSubmitted(BacalhauJob job);\\n    event BacalhauJobResultsReturned(BacalhauJobResult result);\\n\\n    // only this contract is allowed to call \\\"runBacalhauJob\\\"\\n    function setAuthorizedContract(\\n        address _authorizedContract\\n    ) public onlyOwner {\\n        authorizedContract = _authorizedContract;\\n    }\\n\\n    modifier callerIsAuthorizedContract() {\\n        require(msg.sender == authorizedContract, \\\"unauthorized\\\");\\n        _;\\n    }\\n\\n    //msg.sender is always the address where the current (external) function call came from.\\n    //need interface for different jobs available to verify params before sending\\n    function runBacalhauJob(\\n        address _from,\\n        string memory _spec,\\n        LilypadResultType _resultType\\n    ) public callerIsAuthorizedContract returns (uint) {\\n        _jobIds.increment();\\n        uint thisJobId = _jobIds.current();\\n        BacalhauJob memory jobCalled = BacalhauJob({\\n            requestor: _from,\\n            id: thisJobId,\\n            spec: _spec,\\n            resultType: _resultType\\n        });\\n\\n        bacalhauJobHistory.push(jobCalled);\\n        emit NewBacalhauJobSubmitted(jobCalled);\\n        return thisJobId;\\n    }\\n\\n    function currentJobID() public view returns (uint) {\\n        return _jobIds.current();\\n    }\\n\\n    function returnBacalhauResults(\\n        address _to,\\n        uint _jobId,\\n        LilypadResultType _resultType,\\n        string memory _result\\n    ) public onlyOwner {\\n        BacalhauJobResult memory jobResult = BacalhauJobResult({\\n            requestor: _to,\\n            id: _jobId,\\n            result: _result,\\n            success: true,\\n            resultType: _resultType\\n        });\\n        bacalhauJobResultHistory.push(jobResult);\\n        bacalhauJobResultByAddress[_to].push(jobResult);\\n\\n        emit BacalhauJobResultsReturned(jobResult);\\n        LilypadCallerInterface(_to).lilypadFulfilled(\\n            address(this),\\n            _jobId,\\n            _resultType,\\n            _result\\n        );\\n    }\\n\\n    function returnBacalhauError(\\n        address _to,\\n        uint _jobId,\\n        string memory _errorMsg\\n    ) public onlyOwner {\\n        BacalhauJobResult memory jobResult = BacalhauJobResult({\\n            requestor: _to,\\n            id: _jobId,\\n            success: false,\\n            result: _errorMsg,\\n            resultType: LilypadResultType.StdErr\\n        });\\n        bacalhauJobResultHistory.push(jobResult);\\n        bacalhauJobResultByAddress[_to].push(jobResult);\\n\\n        emit BacalhauJobResultsReturned(jobResult);\\n        LilypadCallerInterface(_to).lilypadCancelled(\\n            address(this),\\n            _jobId,\\n            _errorMsg\\n        );\\n    }\\n\\n    function fetchAllJobs() public view returns (BacalhauJob[] memory) {\\n        return bacalhauJobHistory;\\n    }\\n\\n    function fetchAllResults()\\n        public\\n        view\\n        returns (BacalhauJobResult[] memory)\\n    {\\n        return bacalhauJobResultHistory;\\n    }\\n\\n    function fetchJobsByAddress(\\n        address _requestor\\n    ) public view returns (BacalhauJobResult[] memory) {\\n        return bacalhauJobResultByAddress[_requestor];\\n    }\\n}\\n\",\"keccak256\":\"0xbe04a5d00bcfcbaeacb1fbbe2de97f525bd1892351f00a7592a7a4fb80dcb830\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361156590816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163055da1dd14610c7457508063399fad3714610ba357806359759de514610a89578063715018a614610a2f578063807d6dcf146109b15780638da5cb5b146109895780639aad69e714610949578063a6591cdf14610920578063ada458be146108b0578063ce4af1d71461078d578063d992cac8146104da578063dc1c19ea146103d6578063ef2e0911146102fe57838163f280ccb814610194575063f2fde38b146100ca57600080fd5b34610190576020366003190112610190576100e3610c90565b906100ec61105d565b6001600160a01b0391821692831561013e575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b929050346102fa5760803660031901126102fa576101b0610c90565b916024359260443590828210156102f65760643567ffffffffffffffff81116102f2576101e09036908501610e45565b946101e961105d565b7f9c3599b1ae1172dc696af0b3987352577abf98ebc11cc2f7c3a8f0a08b20c0ef61027786519361021985610dc1565b6001600160a01b031680855260208501849052600188860152606085018990529361024786608083016110b5565b610250816110d9565b848a52600560205261026481898c20611367565b8751918291602083526020830190610d0e565b0390a1813b156102f2578680946102c36102b2988851998a978896879563d5040d6560e01b8752309087015260248601526044850190610ceb565b608060648401526084830190610cab565b03925af19081156102e957506102d65750f35b6102df90610df3565b6102e65780f35b80fd5b513d84823e3d90fd5b8680fd5b8580fd5b5050fd5b5082346102e657806003193601126102e6579080549061031d82611517565b9261032a85519485610e23565b828452818152906020907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b908286015b8585106103725787518061036e8982610d5f565b0390f35b6005846001928a5161038381610dc1565b848060a01b03875416815284870154838201526103c860ff8d8160028b0154161515908401526103b560038a01610f26565b60608401528789015416608083016110b5565b81520193019401939161035a565b50346101905760203660031901126101905780359080548210156104d65790600591600052029061036e60018060a01b03837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015416917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8401549360ff7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d8201541660ff7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f6104c77f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e8501610f26565b93015416925195869586610fe8565b8380fd5b509034610190576060366003190112610190576104f5610c90565b60249283359467ffffffffffffffff95868111610789576105199036908401610e45565b9460443591838310156102e6576002546001600160a01b03939084163303610758576001978880540198898155858951986105538a610e07565b16885260209a8b89018b81528a8a0193845261057360608b0195866110b5565b600354600160401b8110156107465780846105919201600355610e9c565b989098610735578a51166001600160601b0360a01b89541617885551828801556002870192518051918211610723578c6105cb8554610eec565b601f81116106db575b50508c908d601f84116001146106785750928293918392889461066d575b50501b916000199060031b1c19161790555b51938085101561065d57505050916106436106549260037f9614ee9ca679bba6d8bd80a13dc0b8e76185314ed2abb02ae2b90dc59f6513cb95016110c1565b835191829187835287830190611026565b0390a151908152f35b634e487b7160e01b825260219052fd5b0151925038806105f2565b919083601f198116878a52848a20948a905b888383106106c157505050106106a8575b505050811b019055610604565b015160001960f88460031b161c1916905538808061069b565b85870151885590960195948501948793509081019061068a565b85885281882090601f850160051c8201928510610719575b601f0160051c019084905b82811061070e57508e91506105d4565b8881550184906106fe565b90915081906106f3565b634e487b7160e01b8652604189528686fd5b634e487b7160e01b8752868a528787fd5b634e487b7160e01b875260418a528787fd5b865162461bcd60e51b8152602081870152600c818501526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b5080fd5b508290346107895781600319360112610789579060039081546107af81611517565b906107bc86519283610e23565b80825260209485830180958086527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9086925b858410610852575050505050508451938085019181865251809252858501958260051b8601019392955b8287106108265785850386f35b909192938280610842600193603f198a82030186528851611026565b9601920196019592919092610819565b848a6001928d809d9a9b9d519061086882610e07565b858060a01b038854168252858801548483015261088760028901610f26565b9082015261089e60ff8789015416606083016110b5565b815201930193019291989695986107ef565b509190346107895780600319360112610789576108cb610c90565b6001600160a01b039081168352600560205281832080549193602435928310156102e6575061036e92916108fe91610fcc565b50928354169260018101549460ff80600284015416916104c760038501610f26565b50503461078957816003193601126107895760025490516001600160a01b039091168152602090f35b83346102e65760203660031901126102e657610963610c90565b61096b61105d565b60018060a01b03166001600160601b0360a01b600254161760025580f35b505034610789578160031936011261078957905490516001600160a01b039091168152602090f35b508290346107895760203660031901126107895735906003548210156102e657506109db90610e9c565b509060018060a01b038254169061036e610a24600185015494608060ff6003610a0660028501610f26565b93015416948051978897885260208801528601526080850190610cab565b916060840190610ceb565b83346102e657806003193601126102e657610a4861105d565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101905760603660031901126101905782610aa5610c90565b6024359060443567ffffffffffffffff81116104d657610ac89036908701610e45565b91610ad161105d565b7f9c3599b1ae1172dc696af0b3987352577abf98ebc11cc2f7c3a8f0a08b20c0ef610b46865193610b0185610dc1565b6001600160a01b031680855260208501849052878501879052606085018690526002608086015293610b32816110d9565b848752600560205261026481898920611367565b0390a1813b156104d65783610b8396865197889586948593631a43c11f60e11b855230908501526024840152606060448401526064830190610cab565b03925af19081156102e95750610b97575080f35b610ba090610df3565b80f35b5091903461078957602080600319360112610190576001600160a01b03929083610bcb610c90565b16825260059081815283832090815493610be485611517565b96610bf187519889610e23565b85885282880193825282822091935b868510610c145787518061036e8b82610d5f565b85846001928c610c668c805192610c2a84610dc1565b888a54168452878a01548685015260ff918260028c015416151590850152610c5460038b01610f26565b606085015289015416608083016110b5565b815201930194019391610c00565b8490346107895781600319360112610789576020906001548152f35b600435906001600160a01b0382168203610ca657565b600080fd5b919082519283825260005b848110610cd7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cb6565b906004821015610cf85752565b634e487b7160e01b600052602160045260246000fd5b90610d5c9060018060a01b03835116815260208301516020820152604083015115156040820152608080610d51606086015160a0606086015260a0850190610cab565b940151910190610ceb565b90565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610d935750505050505090565b9091929394958480610db1600193603f198682030187528a51610d0e565b9801930193019194939290610d83565b60a0810190811067ffffffffffffffff821117610ddd57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610ddd57604052565b6080810190811067ffffffffffffffff821117610ddd57604052565b90601f8019910116810190811067ffffffffffffffff821117610ddd57604052565b81601f82011215610ca65780359067ffffffffffffffff8211610ddd5760405192610e7a601f8401601f191660200185610e23565b82845260208383010111610ca657816000926020809301838601378301015290565b600354811015610ed657600360005260021b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f1c575b6020831014610f0657565b634e487b7160e01b600052602260045260246000fd5b91607f1691610efb565b9060405191826000825492610f3a84610eec565b908184526001948581169081600014610fa95750600114610f66575b5050610f6492500383610e23565b565b9093915060005260209081600020936000915b818310610f91575050610f6493508201013880610f56565b85548884018501529485019487945091830191610f79565b915050610f6494506020925060ff191682840152151560051b8201013880610f56565b8054821015610ed6576000526005602060002091020190600090565b95949293610f649460809361101e9360018060a01b0316895260208901521515604088015260a0606088015260a0870190610cab565b940190610ceb565b90610d5c9060018060a01b03835116815260208301516020820152606080610d516040860151608060408601526080850190610cab565b6000546001600160a01b0316330361107157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6004821015610cf85752565b906004811015610cf85760ff80198354169116179055565b906004908154600160401b8110156113525760019384820180855582101561133d5760056000928584520290817f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0160018060a01b038251166001600160601b0360a01b825416179055602095868201517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8401557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d83016040830151151560ff801983541691161790557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e83019060608301519788519867ffffffffffffffff8a1161132a576111ea8454610eec565b601f81116112e4575b5081601f8b1160011461127d5750988092819288999a9b6080989994611272575b50501b916000199060031b1c19161790555b0151918483101561125f5750610f649293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f016110c1565b634e487b7160e01b815260218552602490fd5b015192503880611214565b909991601f1983169a8589528289209289905b8d82106112cd57505083608098999a9b9c106112b4575b505050811b019055611226565b015160001960f88460031b161c191690553880806112a7565b808785968294968601518155019501930190611290565b848852828820601f8c0160051c810191848d10611320575b601f0160051c019084905b8281106113155750506111f3565b898155018490611307565b90915081906112fc565b634e487b7160e01b875260418952602487fd5b603284634e487b7160e01b6000525260246000fd5b604183634e487b7160e01b6000525260246000fd5b91908254600160401b811015610ddd57611388906001948582018155610fcc565b9190916115015760018060a01b038151166001600160601b0360a01b8354161782556020938482015181840155600283016040830151151560ff80198354169116179055600383019060608301519586519667ffffffffffffffff8811610ddd576113f38454610eec565b601f81116114b8575b5081601f8911600114611450575096809281926080979899600094611445575b50501b916000199060031b1c19161790555b01516004811015610cf8576004610f6492016110c1565b01519250388061141c565b909791601f198316988560005282600020926000905b8b82106114a157505083608098999a10611488575b505050811b01905561142e565b015160001960f88460031b161c1916905538808061147b565b808785968294968601518155019501930190611466565b6000858152838120601f8b0160051c810192858c106114f7575b601f0160051c019185905b8381106114ec575050506113fc565b8281550185906114dd565b90925082906114d2565b634e487b7160e01b600052600060045260246000fd5b67ffffffffffffffff8111610ddd5760051b6020019056fea2646970667358221220ac8c6f0eb5b66ccefc224ec3362a6ad1cbe595f22230740d27f914409a18e82464736f6c63430008120033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908163055da1dd14610c7457508063399fad3714610ba357806359759de514610a89578063715018a614610a2f578063807d6dcf146109b15780638da5cb5b146109895780639aad69e714610949578063a6591cdf14610920578063ada458be146108b0578063ce4af1d71461078d578063d992cac8146104da578063dc1c19ea146103d6578063ef2e0911146102fe57838163f280ccb814610194575063f2fde38b146100ca57600080fd5b34610190576020366003190112610190576100e3610c90565b906100ec61105d565b6001600160a01b0391821692831561013e575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b929050346102fa5760803660031901126102fa576101b0610c90565b916024359260443590828210156102f65760643567ffffffffffffffff81116102f2576101e09036908501610e45565b946101e961105d565b7f9c3599b1ae1172dc696af0b3987352577abf98ebc11cc2f7c3a8f0a08b20c0ef61027786519361021985610dc1565b6001600160a01b031680855260208501849052600188860152606085018990529361024786608083016110b5565b610250816110d9565b848a52600560205261026481898c20611367565b8751918291602083526020830190610d0e565b0390a1813b156102f2578680946102c36102b2988851998a978896879563d5040d6560e01b8752309087015260248601526044850190610ceb565b608060648401526084830190610cab565b03925af19081156102e957506102d65750f35b6102df90610df3565b6102e65780f35b80fd5b513d84823e3d90fd5b8680fd5b8580fd5b5050fd5b5082346102e657806003193601126102e6579080549061031d82611517565b9261032a85519485610e23565b828452818152906020907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b908286015b8585106103725787518061036e8982610d5f565b0390f35b6005846001928a5161038381610dc1565b848060a01b03875416815284870154838201526103c860ff8d8160028b0154161515908401526103b560038a01610f26565b60608401528789015416608083016110b5565b81520193019401939161035a565b50346101905760203660031901126101905780359080548210156104d65790600591600052029061036e60018060a01b03837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015416917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8401549360ff7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d8201541660ff7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f6104c77f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e8501610f26565b93015416925195869586610fe8565b8380fd5b509034610190576060366003190112610190576104f5610c90565b60249283359467ffffffffffffffff95868111610789576105199036908401610e45565b9460443591838310156102e6576002546001600160a01b03939084163303610758576001978880540198898155858951986105538a610e07565b16885260209a8b89018b81528a8a0193845261057360608b0195866110b5565b600354600160401b8110156107465780846105919201600355610e9c565b989098610735578a51166001600160601b0360a01b89541617885551828801556002870192518051918211610723578c6105cb8554610eec565b601f81116106db575b50508c908d601f84116001146106785750928293918392889461066d575b50501b916000199060031b1c19161790555b51938085101561065d57505050916106436106549260037f9614ee9ca679bba6d8bd80a13dc0b8e76185314ed2abb02ae2b90dc59f6513cb95016110c1565b835191829187835287830190611026565b0390a151908152f35b634e487b7160e01b825260219052fd5b0151925038806105f2565b919083601f198116878a52848a20948a905b888383106106c157505050106106a8575b505050811b019055610604565b015160001960f88460031b161c1916905538808061069b565b85870151885590960195948501948793509081019061068a565b85885281882090601f850160051c8201928510610719575b601f0160051c019084905b82811061070e57508e91506105d4565b8881550184906106fe565b90915081906106f3565b634e487b7160e01b8652604189528686fd5b634e487b7160e01b8752868a528787fd5b634e487b7160e01b875260418a528787fd5b865162461bcd60e51b8152602081870152600c818501526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b5080fd5b508290346107895781600319360112610789579060039081546107af81611517565b906107bc86519283610e23565b80825260209485830180958086527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9086925b858410610852575050505050508451938085019181865251809252858501958260051b8601019392955b8287106108265785850386f35b909192938280610842600193603f198a82030186528851611026565b9601920196019592919092610819565b848a6001928d809d9a9b9d519061086882610e07565b858060a01b038854168252858801548483015261088760028901610f26565b9082015261089e60ff8789015416606083016110b5565b815201930193019291989695986107ef565b509190346107895780600319360112610789576108cb610c90565b6001600160a01b039081168352600560205281832080549193602435928310156102e6575061036e92916108fe91610fcc565b50928354169260018101549460ff80600284015416916104c760038501610f26565b50503461078957816003193601126107895760025490516001600160a01b039091168152602090f35b83346102e65760203660031901126102e657610963610c90565b61096b61105d565b60018060a01b03166001600160601b0360a01b600254161760025580f35b505034610789578160031936011261078957905490516001600160a01b039091168152602090f35b508290346107895760203660031901126107895735906003548210156102e657506109db90610e9c565b509060018060a01b038254169061036e610a24600185015494608060ff6003610a0660028501610f26565b93015416948051978897885260208801528601526080850190610cab565b916060840190610ceb565b83346102e657806003193601126102e657610a4861105d565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101905760603660031901126101905782610aa5610c90565b6024359060443567ffffffffffffffff81116104d657610ac89036908701610e45565b91610ad161105d565b7f9c3599b1ae1172dc696af0b3987352577abf98ebc11cc2f7c3a8f0a08b20c0ef610b46865193610b0185610dc1565b6001600160a01b031680855260208501849052878501879052606085018690526002608086015293610b32816110d9565b848752600560205261026481898920611367565b0390a1813b156104d65783610b8396865197889586948593631a43c11f60e11b855230908501526024840152606060448401526064830190610cab565b03925af19081156102e95750610b97575080f35b610ba090610df3565b80f35b5091903461078957602080600319360112610190576001600160a01b03929083610bcb610c90565b16825260059081815283832090815493610be485611517565b96610bf187519889610e23565b85885282880193825282822091935b868510610c145787518061036e8b82610d5f565b85846001928c610c668c805192610c2a84610dc1565b888a54168452878a01548685015260ff918260028c015416151590850152610c5460038b01610f26565b606085015289015416608083016110b5565b815201930194019391610c00565b8490346107895781600319360112610789576020906001548152f35b600435906001600160a01b0382168203610ca657565b600080fd5b919082519283825260005b848110610cd7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cb6565b906004821015610cf85752565b634e487b7160e01b600052602160045260246000fd5b90610d5c9060018060a01b03835116815260208301516020820152604083015115156040820152608080610d51606086015160a0606086015260a0850190610cab565b940151910190610ceb565b90565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610d935750505050505090565b9091929394958480610db1600193603f198682030187528a51610d0e565b9801930193019194939290610d83565b60a0810190811067ffffffffffffffff821117610ddd57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610ddd57604052565b6080810190811067ffffffffffffffff821117610ddd57604052565b90601f8019910116810190811067ffffffffffffffff821117610ddd57604052565b81601f82011215610ca65780359067ffffffffffffffff8211610ddd5760405192610e7a601f8401601f191660200185610e23565b82845260208383010111610ca657816000926020809301838601378301015290565b600354811015610ed657600360005260021b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f1c575b6020831014610f0657565b634e487b7160e01b600052602260045260246000fd5b91607f1691610efb565b9060405191826000825492610f3a84610eec565b908184526001948581169081600014610fa95750600114610f66575b5050610f6492500383610e23565b565b9093915060005260209081600020936000915b818310610f91575050610f6493508201013880610f56565b85548884018501529485019487945091830191610f79565b915050610f6494506020925060ff191682840152151560051b8201013880610f56565b8054821015610ed6576000526005602060002091020190600090565b95949293610f649460809361101e9360018060a01b0316895260208901521515604088015260a0606088015260a0870190610cab565b940190610ceb565b90610d5c9060018060a01b03835116815260208301516020820152606080610d516040860151608060408601526080850190610cab565b6000546001600160a01b0316330361107157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6004821015610cf85752565b906004811015610cf85760ff80198354169116179055565b906004908154600160401b8110156113525760019384820180855582101561133d5760056000928584520290817f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0160018060a01b038251166001600160601b0360a01b825416179055602095868201517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c8401557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d83016040830151151560ff801983541691161790557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e83019060608301519788519867ffffffffffffffff8a1161132a576111ea8454610eec565b601f81116112e4575b5081601f8b1160011461127d5750988092819288999a9b6080989994611272575b50501b916000199060031b1c19161790555b0151918483101561125f5750610f649293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f016110c1565b634e487b7160e01b815260218552602490fd5b015192503880611214565b909991601f1983169a8589528289209289905b8d82106112cd57505083608098999a9b9c106112b4575b505050811b019055611226565b015160001960f88460031b161c191690553880806112a7565b808785968294968601518155019501930190611290565b848852828820601f8c0160051c810191848d10611320575b601f0160051c019084905b8281106113155750506111f3565b898155018490611307565b90915081906112fc565b634e487b7160e01b875260418952602487fd5b603284634e487b7160e01b6000525260246000fd5b604183634e487b7160e01b6000525260246000fd5b91908254600160401b811015610ddd57611388906001948582018155610fcc565b9190916115015760018060a01b038151166001600160601b0360a01b8354161782556020938482015181840155600283016040830151151560ff80198354169116179055600383019060608301519586519667ffffffffffffffff8811610ddd576113f38454610eec565b601f81116114b8575b5081601f8911600114611450575096809281926080979899600094611445575b50501b916000199060031b1c19161790555b01516004811015610cf8576004610f6492016110c1565b01519250388061141c565b909791601f198316988560005282600020926000905b8b82106114a157505083608098999a10611488575b505050811b01905561142e565b015160001960f88460031b161c1916905538808061147b565b808785968294968601518155019501930190611466565b6000858152838120601f8b0160051c810192858c106114f7575b601f0160051c019185905b8381106114ec575050506113fc565b8281550185906114dd565b90925082906114d2565b634e487b7160e01b600052600060045260246000fd5b67ffffffffffffffff8111610ddd5760051b6020019056fea2646970667358221220ac8c6f0eb5b66ccefc224ec3362a6ad1cbe595f22230740d27f914409a18e82464736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "An experimental contract for POC work to call Bacalhau jobs from FVM smart contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5249,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "_jobIds",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)1683_storage"
      },
      {
        "astId": 5251,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "authorizedContract",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5277,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "bacalhauJobHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(BacalhauJob)5261_storage)dyn_storage"
      },
      {
        "astId": 5281,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "bacalhauJobResultHistory",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(BacalhauJobResult)5273_storage)dyn_storage"
      },
      {
        "astId": 5287,
        "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
        "label": "bacalhauJobResultByAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(BacalhauJobResult)5273_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(BacalhauJob)5261_storage)dyn_storage": {
        "base": "t_struct(BacalhauJob)5261_storage",
        "encoding": "dynamic_array",
        "label": "struct LilypadEvents.BacalhauJob[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BacalhauJobResult)5273_storage)dyn_storage": {
        "base": "t_struct(BacalhauJobResult)5273_storage",
        "encoding": "dynamic_array",
        "label": "struct LilypadEvents.BacalhauJobResult[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(LilypadResultType)5206": {
        "encoding": "inplace",
        "label": "enum LilypadResultType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(BacalhauJobResult)5273_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LilypadEvents.BacalhauJobResult[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BacalhauJobResult)5273_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(BacalhauJob)5261_storage": {
        "encoding": "inplace",
        "label": "struct LilypadEvents.BacalhauJob",
        "members": [
          {
            "astId": 5253,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "requestor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5255,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5257,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "spec",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 5260,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "resultType",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(LilypadResultType)5206"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(BacalhauJobResult)5273_storage": {
        "encoding": "inplace",
        "label": "struct LilypadEvents.BacalhauJobResult",
        "members": [
          {
            "astId": 5263,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "requestor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5265,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5267,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "success",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 5269,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "result",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 5272,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "resultType",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(LilypadResultType)5206"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Counter)1683_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 1682,
            "contract": "contracts/lilypad/LilypadEvents.sol:LilypadEvents",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}